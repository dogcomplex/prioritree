<?php
namespace \Exchanges;
return [
		'__map'				=> [
			'__extend'			=> '/exchange'
		],
		'bittrex' 			=> [
			'markets' 			=> [
				'__map'				=> [
					'fees' 				=> [
						'tx' 				=> 0.0025, 
						'gas' 				=> 0,
					],
					'min_trade' 		=> 0.00000001,
					'__query'			=> [
						'done'				=> false,
						'__function'		=> function() {
							$market = $this->__parent;
							if ($this->done === true)
								return $market; // the market
							try {
								$url = 	'https://bittrex.com/api/v1.1/public/getorderbook?market='.$market->name.'&type=both&depth=50';
								$value = file_get_contents($url);
								$value = json_decode($value)->result;
								$market->bids = $value->buys;
								$market->asks = $value->sells;
								$this->done = true;
							} catch(Exception $e) {
								var_dump($e);
								exit(); // TODO
							}		 	
							return $market;
						},
					]
				],
				'btc-eth' => [], 
				'btc-bnt' => [], 
				'eth-bnt' => [],
			]				
		],
		'bancor' 			=> [
			'markets' => [
				'__map'				=> [
					'__extend'			=> '/market',
					'fees' 				=> [
						'tx' 				=> 0,
						'gas' 				=> 0.007,
					],
					'min_trade' 		=> 0,
				],
				'bnt-eth' 			=> [
					'__get'				=> function() {
						try {
							$url = 	'https://bittrex.com/api/v1.1/public/getorderbook?market='.$market.'&type=both&depth=50';
							$value = file_get_contents($url);
							$value = json_decode($value);
							$this->bids = [
								[
									'__extend' 		=> '/order',
									'rate'			=> $value->data->rate,
									'volume'		=> 999999, // TODO set somewhere
									'from'			=> 'bnt',
									'to'			=> 'eth',
									'market'		=> $this,
								]
							];
							$this->asks = [
								[
									'__extend' 		=> '/order',
									'rate'			=> 1 / $value->data->rate,
									'volume'		=> 999999, // TODO set somewhere
									'from'			=> 'eth',
									'to'			=> 'bnt',
									'market'		=> $this,
								]	
							];
							return $this;
						} catch(Exception $e) {
							var_dump($e);
							exit(); // TODO
						}		 	
					}	
				],
			]
		],
	];